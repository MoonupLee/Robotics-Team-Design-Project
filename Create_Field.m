% create the Pitch or Field of Play
function Create_Field()
    load('Field_data.mat');
    % create the holl area
    surface([-(Pitch_length + 2 * Border_strip_width)/2 (Pitch_length + 2 * Border_strip_width)/2; ...
        -(Pitch_length + 2 * Border_strip_width)/2 (Pitch_length + 2 * Border_strip_width)/2], ...
        [(Pitch_width + 2*Border_strip_width)/2 (Pitch_width + 2*Border_strip_width)/2; ...
        -(Pitch_width + 2*Border_strip_width)/2 -(Pitch_width + 2*Border_strip_width)/2], ...
        [0 0;0 0], "FaceColor", [34/255, 139/255, 34/255]);
    
    % create the lines in the Field
    % main area
    surface([-Pitch_length/2 Pitch_length/2;-Pitch_length/2 Pitch_length/2], ...
        [Pitch_width/2 Pitch_width/2; -Pitch_width/2 -Pitch_width/2], ...
        [0 0;0 0], "FaceColor", "none", "EdgeColor","w");
    % left side
    surface([   -Pitch_length/2                         -Pitch_length/2+Penalty_area_length; ...
                -Pitch_length/2                         -Pitch_length/2+Penalty_area_length], ...
                [Penalty_area_width/2                   Penalty_area_width/2; ...
                -Penalty_area_width/2                   -Penalty_area_width/2], ...
        [0 0;0 0], "FaceColor", "none", "EdgeColor","w");
    surface([   -Pitch_length/2                         -Pitch_length/2+Goal_area_length; ...
                -Pitch_length/2                         -Pitch_length/2+Goal_area_length], ...
                [Goal_area_width/2                       Goal_area_width/2; ...
                -Goal_area_width/2                      -Goal_area_width/2], ...
        [0 0;0 0], "FaceColor", "none", "EdgeColor","w");
    surface([   -Pitch_length/2-Goal_depth              -Pitch_length/2; ...
                -Pitch_length/2-Goal_depth              -Pitch_length/2], ...
                [Goal_width/2                           Goal_width/2; ...
                -Goal_width/2                           -Goal_width/2], ...
        [0 0;0 0], "FaceColor", "none", "EdgeColor","w");
    % right side
    surface(-[  -Pitch_length/2+Penalty_area_length     -Pitch_length/2; ...
                -Pitch_length/2+Penalty_area_length     -Pitch_length/2], ...
                [Penalty_area_width/2                    Penalty_area_width/2; ...
                -Penalty_area_width/2                   -Penalty_area_width/2], ...
        [0 0;0 0], "FaceColor", "none", "EdgeColor","w");
    surface(-[  -Pitch_length/2+Goal_area_length        -Pitch_length/2 ; ...
                -Pitch_length/2+Goal_area_length        -Pitch_length/2 ], ...
                [Goal_area_width/2                      Goal_area_width/2; ...
                -Goal_area_width/2                      -Goal_area_width/2], ...
        [0 0;0 0], "FaceColor", "none", "EdgeColor","w");
    surface(-[  -Pitch_length/2-Goal_depth              -Pitch_length/2; ...
                -Pitch_length/2-Goal_depth              -Pitch_length/2], ...
                [Goal_width/2                           Goal_width/2; ...
                -Goal_width/2                           -Goal_width/2], ...
        [0 0;0 0], "FaceColor", "none", "EdgeColor","w");
    % centre area
    line([0 0], [Pitch_width/2 -Pitch_width/2], [0 0], "color", "w") 
    surface([Center_circle_diameter*cos(linspace(0, 2*pi, 100))/2; ...
        Center_circle_diameter*cos(linspace(0,2*pi,100))/2], ...
        [Center_circle_diameter*sin(linspace(0,2*pi,100))/2; ...
        Center_circle_diameter*sin(linspace(0,2*pi,100))/2], ...
        [zeros(size(Center_circle_diameter*cos(linspace(0,2*pi,100)))); ...
        zeros(size(Center_circle_diameter*cos(linspace(0, 2*pi,100))))] ...
        ,"FaceColor", "none", "EdgeColor","w");
    axis equal;
    set(gca, 'visible', 'off');  % Hide the axes
    set(gcf, 'Color', 'w');      % background color
    title('Pitch or Field of Play in 3D');
    grid on;
end
    
